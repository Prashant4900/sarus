import 'package:sarus/src/router/router_config.dart';
import 'package:shelf/shelf.dart';

/// The base class for all Sarus route groups.
///
/// An `Endpoints` subclass defines a collection of related HTTP handlers
/// (GET, POST, etc.), mapped to a base route path via `@Endpoint(path: ...)`.
///
/// Each subclass must provide a [RouterConfig] that is generated via codegen,
/// and may override the [handler] to attach middleware.
///
/// This abstraction encourages modular, testable route definitions,
/// and allows you to extend functionality per group.
abstract class Endpoints {
  /// The HTTP handler used by this route group.
  ///
  /// By default, delegates to the [router] method, but can be overridden
  /// to add middleware, logging, guards, etc.
  Handler get handler => router.call;

  /// The [RouterConfig] defines the routing configuration
  /// for this endpoint class.
  ///
  /// This is typically generated by the `@Endpoint()` annotation and codegen.
  RouterConfig get router;

  /// The prefix for this endpoint class.
  ///
  /// This is typically generated by the `@Endpoint()` annotation and codegen.
  static const String prefix = '';
}
